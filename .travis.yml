sudo: required

language: cpp

os:
  - linux

branches:
  only:
    - master
    - /^(dev)|(dev_.*)$/

env:
  global:
    - ARCH_FLAG_x86='-m32'
    - ARCH_FLAG_x86_64='-m64'

matrix:
  include:
    # gcc
    - env: BUILD_TYPE=Debug ARCH='x86'
      compiler: gcc
    - env: BUILD_TYPE=Release ARCH='x86'
      compiler: gcc
    - env: BUILD_TYPE=Debug ARCH='x86_64'
      compiler: gcc
    - env: BUILD_TYPE=Release ARCH='x86_64'
      compiler: gcc
    # clang
    - env: BUILD_TYPE=Debug ARCH='x86'
      compiler: clang
    - env: BUILD_TYPE=Release ARCH='x86'
      compiler: clang
    - env: BUILD_TYPE=Debug ARCH='x86_64'
      compiler: clang
    - env: BUILD_TYPE=Release ARCH='x86_64'
      compiler: clang
    # coveralls
    - env: BUILD_TYPE=Debug GCOV_FLAG='--coverage'
      compiler: gcc
      cache:
        - pip
      after_success:
        - pip install --user cpp-coveralls
        - coveralls -r .. --gcov-options '\-lp'
          -e build/CMakeFiles
          -e thirdparty
          -e test
          -e include/tastylib/internal
          -e include/tastylib/util
          -e src/sample.cpp
          -e src/benchmark

before_install:
  - sudo apt-add-repository -y ppa:ubuntu-toolchain-r/test
  - sudo apt-get update -qq
  - sudo apt-get install -y g++-multilib
  - ${CXX} -v

before_script:
  - mkdir build && cd build
  - git submodule init
  - git submodule update
  - eval "ARCH_FLAG=\${ARCH_FLAG_${ARCH}}"
  - cmake
    -DTASTYLIB_BUILD_TEST=ON
    -DCMAKE_BUILD_TYPE=${BUILD_TYPE}
    -DCMAKE_CXX_FLAGS="${ARCH_FLAG} ${GCOV_FLAG}"
    -DCMAKE_VERBOSE_MAKEFILE=ON
    ..

script:
  - make -j
  - ctest --verbose
